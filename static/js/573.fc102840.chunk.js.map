{"version":3,"file":"static/js/573.fc102840.chunk.js","mappings":"0RAUMA,EAAuBC,EAAAA,KAAaC,MAAM,CAC9CC,SAAUF,EAAAA,KAAaG,SAAS,wBAChCC,SAAUJ,EAAAA,KAAaG,SAAS,0BAE5BE,EAAoB,CACxBH,SAAU,GACVE,SAAU,IAkHZ,UAhHe,WACb,IAAME,GAAWC,EAAAA,EAAAA,MAIjB,GAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACMC,GAAOC,EAAAA,EAAAA,YAAWC,EAAAA,GAElBC,EAAS,mCAAG,WAAOC,GAAP,8EAChBL,GAAW,GADK,kBAGIM,IAAAA,KAAWC,EAAAA,EAAAA,MAAiB,CAC5CC,SAAUH,EAAOb,SACjBE,SAAUW,EAAOX,WALL,OAOK,OAJbe,EAHQ,QAONC,SAENC,OAAOC,eAAeC,QAAQ,QAASJ,EAAIK,KAAKC,OAChDC,EAAAA,GAAAA,QAAA,UAAiBX,EAAOb,SAAxB,sBACAI,EAAS,KACTK,EAAKgB,WAAU,GACfjB,GAAW,IAbC,gDAgBdkB,QAAQC,IAAI,QAAZ,MACAH,EAAAA,GAAAA,MACE,KAAMI,QAAN,+BAAiD,KAAMA,SAEzDpB,GAAW,GApBG,yDAAH,sDAuBf,OACE,0BACE,oBAASqB,UAAU,YAAnB,UACE,iBAAKA,UAAU,kBAAf,WACE,gBAAKA,UAAU,uBACf,iBAAKA,UAAU,iBAAf,WACE,gBACEC,IAAI,6GACJC,IAAI,eACJF,UAAU,kBAEZ,eAAIA,UAAU,UAAd,oBACA,SAAC,KAAD,CACEG,cAAe7B,EACf8B,iBAAkBpC,EAClBqC,SAAU,SAACrB,GAAD,OAAYD,EAAUC,IAHlC,SAKG,gBACCsB,EADD,EACCA,OACAC,EAFD,EAECA,WACAC,EAHD,EAGCA,aAEAC,GALD,EAICC,aAJD,EAKCD,SACAzB,EAND,EAMCA,OAND,OAQC,UAAC,KAAD,YACE,kBACE2B,KAAK,OACLC,YAAY,WACZC,KAAK,WACLC,MAAO9B,EAAOb,SACd4C,OAAQR,EACRS,SAAUR,EACVS,MAAOC,QAAQT,EAAQtC,UAAYmC,EAAOnC,aAE5C,SAAC,IAAD,CAAgBgD,MAAO,CAAEC,MAAO,OAAhC,SACGX,EAAQtC,UAAYmC,EAAOnC,YAE9B,kBACEwC,KAAK,WACLC,YAAY,WACZC,KAAK,WACLC,MAAO9B,EAAOX,SACd0C,OAAQR,EACRS,SAAUR,EACVS,MAAOC,QAAQT,EAAQpC,UAAYiC,EAAOjC,aAE5C,SAAC,IAAD,CAAgB8C,MAAO,CAAEC,MAAO,OAAhC,SACGX,EAAQpC,UAAYiC,EAAOjC,YAEjB,IAAZK,GACC,mBAAQsB,UAAU,UAAUqB,SAAU3C,EAAtC,0BAIA,mBAAQsB,UAAU,UAAUW,KAAK,SAAjC,2BAOR,gBAAKX,UAAU,0BAAf,UACE,UAAC,IAAD,CACEsB,QAAQ,KACRC,QAAS,kBAAMhD,EAAS,YACxB4C,MAAO,CAAEK,SAAU,QAHrB,8CAME,iBAAML,MAAO,CAAEC,MAAO,UAAWK,OAAQ,WAAzC,sC","sources":["views/pages/auth/Login2.js"],"sourcesContent":["import { FormHelperText, Typography } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport React, { useContext, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport apiConfig from \"../../../config/ApiConfig\";\nimport { UserContext } from \"../../../context/User\";\nimport { Form, Formik } from \"formik\";\nimport * as yup from \"yup\";\nimport \"./login2.css\";\nconst formValidationSchema = yup.object().shape({\n  userName: yup.string().required(\"UserName is Required\"),\n  password: yup.string().required(\"Password is Required\"),\n});\nconst formInitialSchema = {\n  userName: \"\",\n  password: \"\",\n};\nconst Login2 = () => {\n  const navigate = useNavigate();\n  // const [userName, setUserName] = useState(\"\");\n  // const [password, setPassword] = useState(\"\");\n  // const [quote, setQuote] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const user = useContext(UserContext);\n\n  const loginData = async (values) => {\n    setLoading(true);\n    try {\n      const res = await axios.post(apiConfig.login, {\n        username: values.userName,\n        password: values.password,\n      });\n      if (res.status === 200) {\n        // setQuote(res.data);\n        window.sessionStorage.setItem(\"token\", res.data.token);\n        toast.success(`${values.userName} Login successful`);\n        navigate(\"/\");\n        user.userLogIn(true);\n        setLoading(false);\n      }\n    } catch (error) {\n      console.log(\"Error\", error);\n      toast.error(\n        error.message ? `UserName or Password invalid` : error.message\n      );\n      setLoading(false);\n    }\n  };\n  return (\n    <div>\n      <section className=\"container\">\n        <div className=\"login-container\">\n          <div className=\"circle circle-one\"></div>\n          <div className=\"form-container\">\n            <img\n              src=\"https://raw.githubusercontent.com/hicodersofficial/glassmorphism-login-form/master/assets/illustration.png\"\n              alt=\"illustration\"\n              className=\"illustration\"\n            />\n            <h1 className=\"opacity\">LOGIN</h1>\n            <Formik\n              initialValues={formInitialSchema}\n              validationSchema={formValidationSchema}\n              onSubmit={(values) => loginData(values)}\n            >\n              {({\n                errors,\n                handleBlur,\n                handleChange,\n                handleSubmit,\n                touched,\n                values,\n              }) => (\n                <Form>\n                  <input\n                    type=\"text\"\n                    placeholder=\"USERNAME\"\n                    name=\"userName\"\n                    value={values.userName}\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    error={Boolean(touched.userName && errors.userName)}\n                  />\n                  <FormHelperText style={{ color: \"red\" }}>\n                    {touched.userName && errors.userName}\n                  </FormHelperText>\n                  <input\n                    type=\"password\"\n                    placeholder=\"PASSWORD\"\n                    name=\"password\"\n                    value={values.password}\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    error={Boolean(touched.password && errors.password)}\n                  />\n                  <FormHelperText style={{ color: \"red\" }}>\n                    {touched.password && errors.password}\n                  </FormHelperText>\n                  {loading === true ? (\n                    <button className=\"opacity\" disabled={loading}>\n                      LOADING....\n                    </button>\n                  ) : (\n                    <button className=\"opacity\" type=\"submit\">\n                      SUBMIT\n                    </button>\n                  )}\n                </Form>\n              )}\n            </Formik>\n            <div className=\"register-forget opacity\">\n              <Typography\n                variant=\"h6\"\n                onClick={() => navigate(\"/signup\")}\n                style={{ fontSize: \"18px\" }}\n              >\n                Donâ€™t have an account? &nbsp;\n                <span style={{ color: \"#0969da\", cursor: \"pointer\" }}>\n                  Sign up\n                </span>\n              </Typography>\n            </div>\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Login2;\n"],"names":["formValidationSchema","yup","shape","userName","required","password","formInitialSchema","navigate","useNavigate","useState","loading","setLoading","user","useContext","UserContext","loginData","values","axios","apiConfig","username","res","status","window","sessionStorage","setItem","data","token","toast","userLogIn","console","log","message","className","src","alt","initialValues","validationSchema","onSubmit","errors","handleBlur","handleChange","touched","handleSubmit","type","placeholder","name","value","onBlur","onChange","error","Boolean","style","color","disabled","variant","onClick","fontSize","cursor"],"sourceRoot":""}