{"version":3,"file":"static/js/767.f863bb3a.chunk.js","mappings":"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","sources":["components/RenderIf.js","components/Page.js","views/pages/github/GitDetails.js","views/pages/Home/Home.js"],"sourcesContent":["export const RenderIf = ({ children, isTrue }) => {\n  return isTrue ? children : null;\n};\n","import React from \"react\";\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\nexport default function Page(props) {\n  const { title, children } = props;\n\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>{title}</title>\n      </Helmet>\n      <div>{children}</div>\n    </HelmetProvider>\n  );\n}\n","import { Button, Grid, TextField, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport axios from \"axios\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport BarLoader from \"react-spinners/BarLoader\";\nimport { RenderIf } from \"../../../components/RenderIf\";\nconst useStyles = makeStyles(() => ({\n  root: {\n    \"& input\": {\n      padding: \"10px 10px\",\n    },\n    \"& h2\": {\n      fontSize: \"35px\",\n      fontWeight: 100,\n    },\n    \"& button\": {\n      padding: \"6px 15px\",\n      marginLeft: \"10px\",\n    },\n    \"& img\": {\n      borderRadius: \"50%\",\n      width: \"100%\",\n    },\n  },\n  btnDiv: {\n    paddingTop: \"10px\",\n  },\n  details: {\n    \"& h4\": {\n      color: \"darkblue\",\n      fontSize: \"21px\",\n    },\n    \"& h6\": {\n      fontSize: \"18px\",\n    },\n    \"& a\": {\n      padding: \"0\",\n      color: \"blue\",\n    },\n  },\n}));\nconst GitDetails = () => {\n  const classes = useStyles();\n  const navigate = useNavigate();\n  const [userName, setUserName] = useState(\"\");\n  const [gitData, setGitData] = useState(\"\");\n  let [loading, setLoading] = useState(false);\n  let color = \"palevioletred\";\n  const getGitData = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.get(`https://api.github.com/users/${userName}`);\n      if (res.status === 200) {\n        setGitData(res.data);\n        setLoading(false);\n        toast.success(\n          res.statusText\n            ? res.statusText\n            : `${userName} Data fetch successfully`\n        );\n      }\n    } catch (error) {\n      toast.error(`${userName} user not found`);\n      setLoading(false);\n    }\n  };\n\n  const repos = gitData.repos_url;\n  return (\n    <div className={classes.root}>\n      <h2>GitHub</h2>\n      <div>\n        <TextField\n          variant=\"outlined\"\n          onChange={(e) => setUserName(e.target.value)}\n          placeholder=\"Enter Your Username\"\n          onKeyPress={(e) => {\n            if (e.key === \"Enter\") {\n              getGitData();\n            }\n          }}\n        />\n        <Button\n          variant=\"contained\"\n          size=\"large\"\n          color=\"primary\"\n          type=\"submit\"\n          onClick={() => getGitData()}\n        >\n          Search\n        </Button>\n      </div>\n      <RenderIf isTrue={loading === true}>\n        <div\n          style={{\n            height: \"54vh\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <BarLoader\n            color={color}\n            loading={loading}\n            height=\"25px\"\n            width=\"150px\"\n          />\n        </div>\n      </RenderIf>\n\n      <RenderIf isTrue={gitData !== \"\"}>\n        <div style={{ paddingTop: \"30px\" }}>\n          <Grid container spacing={3}>\n            <Grid item lg={3} md={3} sm={6} xs={12}>\n              <img src={gitData.avatar_url} alt=\"\" />\n            </Grid>\n            <Grid item lg={9} md={9} sm={6} xs={12}>\n              <div className={classes.details}>\n                <div>\n                  <Typography variant=\"h4\">Name</Typography>\n                  <Typography variant=\"h6\">\n                    <a href={gitData.html_url} target=\"_blank\" rel=\"noreferrer\">\n                      {gitData.name}\n                    </a>\n                  </Typography>\n                </div>\n                <div>\n                  <Typography variant=\"h4\">Username</Typography>\n                  <Typography variant=\"h6\">{gitData.login}</Typography>\n                </div>\n                <div>\n                  <Typography variant=\"h4\">Bio</Typography>\n                  <Typography variant=\"h6\">{gitData.bio}</Typography>\n                </div>\n                <div>\n                  <Typography variant=\"h4\">Followers</Typography>\n                  <Typography variant=\"h6\">{gitData.followers}</Typography>\n                </div>\n                <div>\n                  <Typography variant=\"h4\">Following</Typography>\n                  <Typography variant=\"h6\">{gitData.following}</Typography>\n                </div>\n                <div>\n                  <Typography variant=\"h4\">Location</Typography>\n                  <Typography variant=\"h6\">{gitData.location}</Typography>\n                </div>\n                <div>\n                  <Typography variant=\"h4\">Twitter Username</Typography>\n                  <Typography variant=\"h6\">\n                    {gitData.twitter_username}\n                  </Typography>\n                </div>\n              </div>\n            </Grid>\n          </Grid>\n          <div>\n            <Button\n              variant=\"contained\"\n              size=\"large\"\n              color=\"primary\"\n              type=\"submit\"\n              onClick={() => navigate(\"/git\", { state: repos })}\n            >\n              Go To Repos List\n            </Button>\n          </div>\n        </div>\n      </RenderIf>\n      <RenderIf isTrue={gitData === \"\" && loading === false}>\n        <div\n          style={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            height: \"54vh\",\n            alignItems: \"center\",\n          }}\n        >\n          <Typography style={{ color: \"palevioletred\", fontSize: \"25px\" }}>\n            First search the GitHub user to see the result\n          </Typography>\n        </div>\n      </RenderIf>\n    </div>\n  );\n};\n\nexport default GitDetails;\n","import React from \"react\";\nimport { Box, Container } from \"@material-ui/core\";\nimport Page from \"../../../components/Page\";\n// import Banner from \"./Banner\";\nimport GitDetails from \"../github/GitDetails\";\nfunction Home(props) {\n  return (\n    <Page title=\"GitHub | Home\">\n      <Container>\n        <Box>\n          <GitDetails />\n        </Box>\n      </Container>\n    </Page>\n  );\n}\n\nexport default Home;\n"],"names":["RenderIf","children","isTrue","Page","props","title","useStyles","makeStyles","root","padding","fontSize","fontWeight","marginLeft","borderRadius","width","btnDiv","paddingTop","details","color","classes","navigate","useNavigate","useState","userName","setUserName","gitData","setGitData","loading","setLoading","getGitData","axios","res","status","data","toast","statusText","repos","repos_url","className","TextField","variant","onChange","e","target","value","placeholder","onKeyPress","key","Button","size","type","onClick","style","height","display","justifyContent","alignItems","Grid","container","spacing","item","lg","md","sm","xs","src","avatar_url","alt","Typography","href","html_url","rel","name","login","bio","followers","following","location","twitter_username","state","Container","Box"],"sourceRoot":""}