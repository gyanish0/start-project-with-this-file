{"version":3,"file":"static/js/207.d63bb431.chunk.js","mappings":"2IAAO,IAAMA,EAAW,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,SACzB,OADgD,EAAbC,OACnBD,EAAW,O,gLCMvBE,GAAYC,EAAAA,EAAAA,IAAW,iBAAO,MA+GpC,UA9GiB,WACf,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,EAAK,OAAGF,QAAH,IAAGA,OAAH,EAAGA,EAAUG,MAClBC,EAAUN,IAChB,GAAwBO,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAKG,EAAL,KAAcC,EAAd,KAEMC,EAAW,mCAAG,6GAEEC,IAAAA,IAAA,UAAaT,IAFf,OAGG,OADbU,EAFU,QAGRC,SACNN,EAAO,OAACK,QAAD,IAACA,OAAD,EAACA,EAAKE,MACbL,GAAW,IALG,gDAQhBM,QAAQC,IAAI,QAAZ,MARgB,yDAAH,qDAejB,OAHAC,EAAAA,EAAAA,YAAU,WACRP,QAGA,4BACE,SAAC,IAAD,CAAYQ,QAAQ,KAApB,wBACA,iBAAKC,UAAWf,EAAQgB,KAAxB,WACE,gBAAKC,MAAO,CAAEC,QAAS,YAAvB,UACE,UAAC,IAAD,CAAYD,MAAO,CAAEE,MAAO,SAA5B,qCAC2BjB,EAAKkB,YAHpC,OAMGlB,QANH,IAMGA,OANH,EAMGA,EAAMmB,KAAI,SAACX,EAAMY,GAAP,OACT,4BACE,wBAAKA,EAAI,KACT,0BACE,UAAC,IAAD,YACE,iBAAML,MAAO,CAAEE,MAAO,SAAtB,qCADF,OAIGT,QAJH,IAIGA,OAJH,EAIGA,EAAMa,KAJT,UAIsBb,EAAKc,SAJ3B,kBAOF,0BACE,UAAC,IAAD,YACE,iBAAMP,MAAO,CAAEE,MAAO,SAAtB,wCAGCT,EAAKe,kBAGV,iBAAKR,MAAO,CAAEC,QAAS,YAAvB,WACE,SAAC,IAAD,CAAUzB,OAAyB,MAAjBiB,EAAKgB,SAAvB,UACE,SAAC,IAAD,CACEZ,QAAQ,YACRa,KAAK,QACLR,MAAM,UACNS,KAAK,SAJP,UAME,cACEC,KAAI,OAAEnB,QAAF,IAAEA,OAAF,EAAEA,EAAMgB,SACZI,OAAO,SACPb,MAAO,CAAEE,MAAO,QAChBY,IAAI,aAJN,4BAWJ,SAAC,IAAD,CACEjB,QAAQ,YACRa,KAAK,QACLR,MAAM,UACNS,KAAK,SACLX,MAAO,CAAEe,WAAY,QALvB,UAOE,cACEH,KAAI,OAAEnB,QAAF,IAAEA,OAAF,EAAEA,EAAMuB,QACZH,OAAO,SACPb,MAAO,CAAEE,MAAO,QAChBY,IAAI,aAJN,6BA5CIT,UAyDd,SAAC,IAAD,CAAU7B,QAAoB,IAAZW,EAAlB,UACE,gBACEa,MAAO,CACLiB,OAAQ,OACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,UALhB,UAQE,SAAC,IAAD,CACElB,MA7FE,gBA8FFf,QAASA,EACT8B,OAAO,OACPI,MAAM","sources":["components/RenderIf.js","views/pages/github/GitRepos.js"],"sourcesContent":["export const RenderIf = ({ children, isTrue }) => {\n  return isTrue ? children : null;\n};\n","import { Button, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport BarLoader from \"react-spinners/BarLoader\";\nimport { RenderIf } from \"../../../components/RenderIf\";\nconst useStyles = makeStyles(() => ({}));\nconst GitRepos = () => {\n  const location = useLocation();\n  const repos = location?.state;\n  const classes = useStyles();\n  const [repo, setRepo] = useState([]);\n  let [loading, setLoading] = useState(true);\n  let color = \"palevioletred\";\n  const getRepoData = async () => {\n    try {\n      const res = await axios.get(`${repos}`);\n      if (res.status === 200) {\n        setRepo(res?.data);\n        setLoading(false);\n      }\n    } catch (error) {\n      console.log(\"Error\", error);\n      //   setLoading(false);\n    }\n  };\n  useEffect(() => {\n    getRepoData();\n  });\n  return (\n    <div>\n      <Typography variant=\"h4\">Git Repos</Typography>\n      <div className={classes.head}>\n        <div style={{ padding: \"10px 0px\" }}>\n          <Typography style={{ color: \"brown\" }}>\n            Total GitHub Repository {repo.length}\n          </Typography>\n        </div>\n        {repo?.map((data, i) => (\n          <div key={i}>\n            <h1>{i + 1}</h1>\n            <div>\n              <Typography>\n                <span style={{ color: \"green\" }}>\n                  Project Name : &nbsp;&nbsp;\n                </span>\n                {data?.name} Using {data.language} Language\n              </Typography>\n            </div>\n            <div>\n              <Typography>\n                <span style={{ color: \"green\" }}>\n                  Project Description : &nbsp;\n                </span>\n                {data.description}\n              </Typography>\n            </div>\n            <div style={{ padding: \"10px 0px\" }}>\n              <RenderIf isTrue={data.homepage != null}>\n                <Button\n                  variant=\"contained\"\n                  size=\"large\"\n                  color=\"primary\"\n                  type=\"submit\"\n                >\n                  <a\n                    href={data?.homepage}\n                    target=\"_blank\"\n                    style={{ color: \"#fff\" }}\n                    rel=\"noreferrer\"\n                  >\n                    Home Page\n                  </a>\n                </Button>\n              </RenderIf>\n\n              <Button\n                variant=\"contained\"\n                size=\"large\"\n                color=\"primary\"\n                type=\"submit\"\n                style={{ marginLeft: \"10px\" }}\n              >\n                <a\n                  href={data?.svn_url}\n                  target=\"_blank\"\n                  style={{ color: \"#fff\" }}\n                  rel=\"noreferrer\"\n                >\n                  Repo Url\n                </a>\n              </Button>\n            </div>\n          </div>\n        ))}\n      </div>\n      <RenderIf isTrue={loading === true}>\n        <div\n          style={{\n            height: \"62vh\",\n            display: \"flex\",\n            justifyContent: \"center\",\n            alignItems: \"center\",\n          }}\n        >\n          <BarLoader\n            color={color}\n            loading={loading}\n            height=\"15px\"\n            width=\"250px\"\n          />\n        </div>\n      </RenderIf>\n    </div>\n  );\n};\n\nexport default GitRepos;\n"],"names":["RenderIf","children","isTrue","useStyles","makeStyles","location","useLocation","repos","state","classes","useState","repo","setRepo","loading","setLoading","getRepoData","axios","res","status","data","console","log","useEffect","variant","className","head","style","padding","color","length","map","i","name","language","description","homepage","size","type","href","target","rel","marginLeft","svn_url","height","display","justifyContent","alignItems","width"],"sourceRoot":""}